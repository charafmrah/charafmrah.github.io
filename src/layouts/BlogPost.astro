---
import BaseHead from "../components/global/BaseHead.astro";
import Footer from "../components/global/Footer.astro";
import TableOfContents from "../components/blog-post/TableOfContents.astro";
import { Image } from "@astrojs/image/components";
import { SITE_TITLE, SITE_DESCRIPTION } from "../config";
import { SEO } from "astro-seo";

declare global {
  interface Window {
    dataLayer: any[];
    gtag: (...args: any[]) => void;
  }
}
export interface Props {
  content: {
    title: string;
    description: string;
    pubDate?: string;
    updatedDate?: string;
    heroImage?: string;
  };
}

const {
  content: { title, description, pubDate, updatedDate, heroImage },
} = Astro.props;
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
    <SEO
      title={title}
      description={description}
      openGraph={{
        basic: {
          title: { title },
          type: "website",
          image: "https://charafmrah.com/thumbnail.jpg",
        },
      }}
      twitter={{
        creator: "@charafmrah",
      }}
    />
  </head>

  <body
    data-nav="false"
    class="m-0 w-screen bg-black font-Inter text-slate-700"
  >
    <!-- Google tag (gtag.js) -->
    <script async src="https://www.googletagmanager.com/gtag/js?id=G-59JLRZ4JB2"
    ></script>
    <script is:inline>
      window.dataLayer = window.dataLayer || [];
      function gtag() {
        dataLayer.push(arguments);
      }
      gtag("js", new Date());

      gtag("config", "G-59JLRZ4JB2");
    </script>

    <!--

 -->
    <main
      role="main"
      class="relative z-[2] transform bg-white bg-cover bg-center transition-all duration-500 ease-in-out lg:pt-0"
    >
      <div class="container flex h-full min-w-full flex-row items-center">
        <div
          id="page-wrapper"
          class="h-screen overflow-scroll scroll-smooth px-5 text-base md:px-40 lg:px-80 lg:pt-36"
        >
          <div class="pb-32">
            <div
              class="header z-20 flex w-full items-center justify-start gap-3 bg-white py-4 transition-all duration-500 ease-in-out lg:absolute lg:top-0 lg:left-0 lg:w-32 lg:bg-transparent lg:px-8"
            >
              <a rel="prefetch" href="/blog" class="w-full shrink-0">
                <button
                  type="button"
                  id="learn-more"
                  class="mb-10 w-full cursor-pointer rounded-lg border-2 border-black py-2 px-14 text-lg font-bold text-black hover:bg-black hover:text-white lg:mb-0 lg:w-auto"
                  >Back</button
                >
              </a>
            </div>
            <TableOfContents />
            <div class="contents">
              <article id="single-article">
                <header>
                  <h1 class="title">{title}</h1>
                  {
                    heroImage && (
                      <Image
                        class="mb-10 w-full rounded-lg"
                        src={import(`../assets/images/hero/${heroImage}.png`)}
                        alt="Hero image"
                      />
                    )
                  }
                  <p>{description}</p>
                  <hr class="mb-10" />
                </header>
                <slot />
              </article>
            </div>
          </div>
        </div>
      </div>
    </main>
    <Footer />

    <script is:inline>
      document
        .getElementById("nav-toggle")
        .addEventListener("click", toggleNav);

      document.querySelectorAll("a.nav-link").forEach((link) => {
        link.addEventListener("click", toggleNav);
      });

      function toggleNav() {
        document.body.dataset.nav =
          document.body.dataset.nav === "true" ? "false" : "true";
      }
    </script>

    <script>
      let options = {
        root: null,
        rootMargin: "0px",
      };
      const observer = new IntersectionObserver((entries) => {
        entries.forEach((entry) => {
          if (entry.isIntersecting) {
            entry.target.classList.add("show");
          } else {
            entry.target.classList.remove("show");
          }
        });
      });

      const hiddentElements = document.querySelectorAll(".component-hidden");
      hiddentElements.forEach((element) => {
        observer.observe(element);
      }, options);
    </script>
    <style is:global>
      p {
        @apply mb-10 md:text-lg lg:text-xl;
      }

      img {
        @apply mb-5 max-w-full rounded-md shadow-md;
      }

      .contents {
        padding: 1em;
        width: 100%;
        max-width: 800px;
        font-size: 1.2em;
      }
      .contents h2,
      .contents h3 {
        padding-top: 1em;
      }
      body[data-nav="true"] > .header {
        transition: all 500ms;
        transform: translateY(-100%);
        visibility: hidden;
      }
    </style>
    <style>
      #learn-more {
        --orangeDark: #ff6b00;
        --orangeLight: #ff9f00;
        min-width: 200px;
        color: #0f172a;
        text-transform: uppercase;
        padding: 1.25em 2em;
        background: #fed7aa;
        border: 2px solid #fdba74;
        border-radius: 0.75em;
        -webkit-transform-style: preserve-3d;
        transform-style: preserve-3d;
        -webkit-transition: background 150ms cubic-bezier(0, 0, 0.58, 1),
          -webkit-transform 150ms cubic-bezier(0, 0, 0.58, 1);
        transition: transform 150ms cubic-bezier(0, 0, 0.58, 1),
          background 150ms cubic-bezier(0, 0, 0.58, 1),
          -webkit-transform 150ms cubic-bezier(0, 0, 0.58, 1);
      }

      #learn-more::before {
        position: absolute;
        content: "";
        width: 100%;
        height: 100%;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: #fb923c;
        border-radius: inherit;
        -webkit-box-shadow: 0 0 0 2px var(--orangeDark), 0 0.625em 0 0 #fff;
        box-shadow: 0 0 0 2px var(--orangeDark), 0 0.625em 0 0 #fff;
        -webkit-transform: translate3d(0, 0.75em, -1em);
        transform: translate3d(0, 0.75em, -1em);
        transition: transform 150ms cubic-bezier(0, 0, 0.58, 1),
          box-shadow 150ms cubic-bezier(0, 0, 0.58, 1),
          -webkit-transform 150ms cubic-bezier(0, 0, 0.58, 1),
          -webkit-box-shadow 150ms cubic-bezier(0, 0, 0.58, 1);
      }

      #learn-more:hover {
        background: #fb923c;
        -webkit-transform: translate(0, 0.25em);
        transform: translate(0, 0.25em);
      }

      #learn-more:hover::before {
        -webkit-box-shadow: 0 0 0 2px var(--orangeDark), 0 0.5em 0 0 #fff;
        box-shadow: 0 0 0 2px var(--orangeDark), 0 0.5em 0 0 #fff;
        -webkit-transform: translate3d(0, 0.5em, -1em);
        transform: translate3d(0, 0.5em, -1em);
      }

      #learn-more:active {
        background: #fb923c;
        -webkit-transform: translate(0em, 0.75em);
        transform: translate(0em, 0.75em);
      }

      #learn-more:active::before {
        -webkit-box-shadow: 0 0 0 2px var(--orangeDark), 0 0 var(--orangeLight);
        box-shadow: 0 0 0 2px var(--orangeDark), 0 0 var(--orangeLight);
        -webkit-transform: translate3d(0, 0, -1em);
        transform: translate3d(0, 0, -1em);
      }
    </style>
  </body>
</html>
